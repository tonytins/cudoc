@page "/view/{Id}"
@inject HttpClient _client
@try
{
    @if (IsFinished)
    {
        <DynTitle Root="@PathTitle" Name="@Title" />
        <div align="center">
            <img src="/images/@Path/@Filename" />
        </div>
    }
    else
    {
        <div align="center">
            <div class="progress-bar"></div>
        </div>
    }
}
catch
{
    <ErrorDisplay />
}

@code {

    [Parameter] public string Id { get; set; } = string.Empty;
    string Filename { get; set; } = string.Empty;
    string Path { get; set; } = "gallery";
    string PathTitle { get; set; } = string.Empty;
    string Title { get; set; } = string.Empty;
    bool IsFinished { get; set; } = false;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            var file = await _client.GetStreamAsync(GlobalConsts.GALLERY_CSV);
            var csv = GalleryDB.Reader(file, int.Parse(Id));
            var culture = new CultureInfo("en-US", false);
            var txtInfo = culture.TextInfo;

            Path = csv.Path;
            PathTitle = txtInfo.ToTitleCase(Path);
            Filename = csv.Filename;

            if (!string.IsNullOrEmpty(csv.Title) || !string.IsNullOrWhiteSpace(csv.Title))
                Title = csv.Title;
            else
            {
                var oldName = Filename;

                Title = txtInfo.ToTitleCase(oldName
                .Replace("zc", "Zack")
                .Replace("_z", " Zack")
                .Replace("z_", "Zack ")
                .Replace('_', ' ')
                .Replace(".png", string.Empty)
                .Replace(".jpg", string.Empty)
                .Replace(".gif", string.Empty)
                .ToString());
            }

            IsFinished = true;
        }
        catch (Exception err)
        {
            throw new Exception(err.Message);
        }
    }
}

